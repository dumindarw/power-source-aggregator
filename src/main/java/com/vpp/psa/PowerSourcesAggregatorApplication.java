package com.vpp.psa;



import liquibase.configuration.LiquibaseConfiguration;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.nativex.hint.*;


@SpringBootApplication
@TypeHints(value = {
		@TypeHint(typeNames = "liquibase.configuration.LiquibaseConfiguration"),
		@TypeHint(typeNames = "liquibase.logging.core.LogServiceFactory"),
		@TypeHint(typeNames = "liquibase.license.LicenseServiceFactory"),
		@TypeHint(typeNames = "liquibase.executor.ExecutorService"),
		@TypeHint(typeNames = "com.sun.org.apache.xerces.internal.impl.dv.xs.ExtendedSchemaDVFactoryImpl"),
		@TypeHint(typeNames = "com.sun.org.apache.xerces.internal.impl.dv.xs.SchemaDVFactoryImpl"),
		@TypeHint(typeNames = "com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl"),
		@TypeHint(typeNames = "com.sun.xml.internal.stream.events.XMLEventFactoryImpl"),
		@TypeHint(typeNames = "liquibase.AbstractExtensibleObject"),
		@TypeHint(typeNames = "liquibase.change.AbstractChange"),
		@TypeHint(typeNames = "liquibase.change.AbstractSQLChange"),
		@TypeHint(typeNames = "liquibase.change.ChangeFactory"),
		@TypeHint(typeNames = "liquibase.change.ColumnConfig"),
		@TypeHint(typeNames = "liquibase.change.ConstraintsConfig"),
		@TypeHint(typeNames = "liquibase.change.core.AbstractModifyDataChange"),
		@TypeHint(typeNames = "liquibase.change.core.AddAutoIncrementChange"),
		@TypeHint(typeNames = "liquibase.change.core.AddColumnChange"),
		@TypeHint(typeNames = "liquibase.change.core.AddDefaultValueChange"),
		@TypeHint(typeNames = "liquibase.change.core.AddForeignKeyConstraintChange"),
		@TypeHint(typeNames = "liquibase.change.core.AddLookupTableChange"),
		@TypeHint(typeNames = "liquibase.change.core.AddNotNullConstraintChange"),
		@TypeHint(typeNames = "liquibase.change.core.AddPrimaryKeyChange"),
		@TypeHint(typeNames = "liquibase.change.core.AddUniqueConstraintChange"),
		@TypeHint(typeNames = "liquibase.change.core.AlterSequenceChange"),
		@TypeHint(typeNames = "liquibase.change.core.CreateIndexChange"),
		@TypeHint(typeNames = "liquibase.change.core.CreateProcedureChange"),
		@TypeHint(typeNames = "liquibase.change.core.CreateSequenceChange"),
		@TypeHint(typeNames = "liquibase.change.core.CreateTableChange"),
		@TypeHint(typeNames = "liquibase.change.core.CreateViewChange"),
		@TypeHint(typeNames = "liquibase.change.core.DeleteDataChange"),
		@TypeHint(typeNames = "liquibase.change.core.DropAllForeignKeyConstraintsChange"),
		@TypeHint(typeNames = "liquibase.change.core.DropColumnChange"),
		@TypeHint(typeNames = "liquibase.change.core.DropDefaultValueChange"),
		@TypeHint(typeNames = "liquibase.change.core.DropForeignKeyConstraintChange"),
		@TypeHint(typeNames = "liquibase.change.core.DropIndexChange"),
		@TypeHint(typeNames = "liquibase.change.core.DropNotNullConstraintChange"),
		@TypeHint(typeNames = "liquibase.change.core.DropPrimaryKeyChange"),
		@TypeHint(typeNames = "liquibase.change.core.DropProcedureChange"),
		@TypeHint(typeNames = "liquibase.change.core.DropSequenceChange"),
		@TypeHint(typeNames = "liquibase.change.core.DropTableChange"),
		@TypeHint(typeNames = "liquibase.change.core.DropUniqueConstraintChange"),
		@TypeHint(typeNames = "liquibase.change.core.DropViewChange"),
		@TypeHint(typeNames = "liquibase.change.core.EmptyChange"),
		@TypeHint(typeNames = "liquibase.change.core.ExecuteShellCommandChange"),
		@TypeHint(typeNames = "liquibase.change.core.InsertDataChange"),
		@TypeHint(typeNames = "liquibase.change.core.LoadDataChange"),
		@TypeHint(typeNames = "liquibase.change.core.LoadUpdateDataChange"),
		@TypeHint(typeNames = "liquibase.change.core.MergeColumnChange"),
		@TypeHint(typeNames = "liquibase.change.core.ModifyDataTypeChange"),
		@TypeHint(typeNames = "liquibase.change.core.OutputChange"),
		@TypeHint(typeNames = "liquibase.change.core.RawSQLChange"),
		@TypeHint(typeNames = "liquibase.change.core.RenameColumnChange"),
		@TypeHint(typeNames = "liquibase.change.core.RenameSequenceChange"),
		@TypeHint(typeNames = "liquibase.change.core.RenameTableChange"),
		@TypeHint(typeNames = "liquibase.change.core.RenameViewChange"),
		@TypeHint(typeNames = "liquibase.change.core.SQLFileChange"),
		@TypeHint(typeNames = "liquibase.change.core.SetColumnRemarksChange"),
		@TypeHint(typeNames = "liquibase.change.core.SetTableRemarksChange"),
		@TypeHint(typeNames = "liquibase.change.core.StopChange"),
		@TypeHint(typeNames = "liquibase.change.core.TagDatabaseChange"),
		@TypeHint(typeNames = "liquibase.change.core.UpdateDataChange"),
		@TypeHint(typeNames = "liquibase.change.custom.CustomChangeWrapper"),
		@TypeHint(typeNames = "liquibase.changelog.StandardChangeLogHistoryService"),
		@TypeHint(typeNames = "liquibase.configuration.GlobalConfiguration"),
		@TypeHint(typeNames = "liquibase.configuration.HubConfiguration"),
		@TypeHint(typeNames = "liquibase.database.core.H2Database"),
		@TypeHint(typeNames = "liquibase.database.core.MariaDBDatabase"),
		@TypeHint(typeNames = "liquibase.database.core.MSSQLDatabase"),
		@TypeHint(typeNames = "liquibase.database.core.MySQLDatabase"),
		@TypeHint(typeNames = "liquibase.database.core.OracleDatabase"),
		@TypeHint(typeNames = "liquibase.database.core.PostgresDatabase"),
		@TypeHint(typeNames = "liquibase.database.jvm.JdbcConnection"),
		@TypeHint(typeNames = "liquibase.datatype.core.BigIntType"),
		@TypeHint(typeNames = "liquibase.datatype.core.BlobType"),
		@TypeHint(typeNames = "liquibase.datatype.core.BooleanType"),
		@TypeHint(typeNames = "liquibase.datatype.core.CharType"),
		@TypeHint(typeNames = "liquibase.datatype.core.ClobType"),
		@TypeHint(typeNames = "liquibase.datatype.core.CurrencyType"),
		@TypeHint(typeNames = "liquibase.datatype.core.DatabaseFunctionType"),
		@TypeHint(typeNames = "liquibase.datatype.core.DateTimeType"),
		@TypeHint(typeNames = "liquibase.datatype.core.DateType"),
		@TypeHint(typeNames = "liquibase.datatype.core.DecimalType"),
		@TypeHint(typeNames = "liquibase.datatype.core.DoubleType"),
		@TypeHint(typeNames = "liquibase.datatype.core.FloatType"),
		@TypeHint(typeNames = "liquibase.datatype.core.IntType"),
		@TypeHint(typeNames = "liquibase.datatype.core.MediumIntType"),
		@TypeHint(typeNames = "liquibase.datatype.core.NCharType"),
		@TypeHint(typeNames = "liquibase.datatype.core.NumberType"),
		@TypeHint(typeNames = "liquibase.datatype.core.NVarcharType"),
		@TypeHint(typeNames = "liquibase.datatype.core.SmallIntType"),
		@TypeHint(typeNames = "liquibase.datatype.core.TimestampType"),
		@TypeHint(typeNames = "liquibase.datatype.core.TimeType"),
		@TypeHint(typeNames = "liquibase.datatype.core.TinyIntType"),
		@TypeHint(typeNames = "liquibase.datatype.core.UnknownType"),
		@TypeHint(typeNames = "liquibase.datatype.core.UUIDType"),
		@TypeHint(typeNames = "liquibase.datatype.core.VarcharType"),
		@TypeHint(typeNames = "liquibase.datatype.core.XMLType"),
		@TypeHint(typeNames = "liquibase.executor.ExecutorService"),
		@TypeHint(typeNames = "liquibase.executor.jvm.JdbcExecutor"),
		@TypeHint(typeNames = "liquibase.hub.HubServiceFactory"),
		@TypeHint(typeNames = "liquibase.license.LicenseServiceFactory"),
		@TypeHint(typeNames = "liquibase.lockservice.StandardLockService"),
		@TypeHint(typeNames = "liquibase.logging.core.LogServiceFactory"),
		@TypeHint(typeNames = "liquibase.parser.ChangeLogParserCofiguration"),
		@TypeHint(typeNames = "liquibase.plugin.AbstractPlugin"),
		@TypeHint(typeNames = "liquibase.serializer.AbstractLiquibaseSerializable"),
		@TypeHint(typeNames = "liquibase.sql.visitor.AppendSqlVisitor"),
		@TypeHint(typeNames = "liquibase.sql.visitor.PrependSqlVisitor"),
		@TypeHint(typeNames = "liquibase.sql.visitor.RegExpReplaceSqlVisitor"),
		@TypeHint(typeNames = "liquibase.sql.visitor.ReplaceSqlVisitor"),
		@TypeHint(typeNames = "liquibase.changelog.RanChangeSet"),
		@TypeHint(typeNames = "com.zaxxer.hikari.HikariConfig"),
		@TypeHint(typeNames = "java.util.concurrent.CopyOnWriteArrayList"),
		@TypeHint(typeNames = "java.sql.Statement[]"),
		@TypeHint(typeNames = "com.zaxxer.hikari.HikariDataSource"),
		@TypeHint(typeNames = "liquibase.configuration.LiquibaseConfiguration"),
		@TypeHint(typeNames = "com.zaxxer.hikari.util.ConcurrentBag.IConcurrentBagEntry[]"),
		@TypeHint(typeNames = "liquibase.change.core.LoadDataColumnConfig")
})
public class PowerSourcesAggregatorApplication {

	public static void main(String[] args) {
		SpringApplication.run(PowerSourcesAggregatorApplication.class, args);
	}

}
