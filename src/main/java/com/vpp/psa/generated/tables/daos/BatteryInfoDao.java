/*
 * This file is generated by jOOQ.
 */
package com.vpp.psa.generated.tables.daos;


import com.vpp.psa.generated.tables.BatteryInfo;
import com.vpp.psa.generated.tables.records.BatteryInfoRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BatteryInfoDao extends DAOImpl<BatteryInfoRecord, com.vpp.psa.generated.tables.pojos.BatteryInfo, Integer> {

    /**
     * Create a new BatteryInfoDao without any configuration
     */
    public BatteryInfoDao() {
        super(BatteryInfo.BATTERY_INFO, com.vpp.psa.generated.tables.pojos.BatteryInfo.class);
    }

    /**
     * Create a new BatteryInfoDao with an attached configuration
     */
    public BatteryInfoDao(Configuration configuration) {
        super(BatteryInfo.BATTERY_INFO, com.vpp.psa.generated.tables.pojos.BatteryInfo.class, configuration);
    }

    @Override
    public Integer getId(com.vpp.psa.generated.tables.pojos.BatteryInfo object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.vpp.psa.generated.tables.pojos.BatteryInfo> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(BatteryInfo.BATTERY_INFO.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.vpp.psa.generated.tables.pojos.BatteryInfo> fetchById(Integer... values) {
        return fetch(BatteryInfo.BATTERY_INFO.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.vpp.psa.generated.tables.pojos.BatteryInfo fetchOneById(Integer value) {
        return fetchOne(BatteryInfo.BATTERY_INFO.ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.vpp.psa.generated.tables.pojos.BatteryInfo> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(BatteryInfo.BATTERY_INFO.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.vpp.psa.generated.tables.pojos.BatteryInfo> fetchByName(String... values) {
        return fetch(BatteryInfo.BATTERY_INFO.NAME, values);
    }

    /**
     * Fetch a unique record that has <code>name = value</code>
     */
    public com.vpp.psa.generated.tables.pojos.BatteryInfo fetchOneByName(String value) {
        return fetchOne(BatteryInfo.BATTERY_INFO.NAME, value);
    }

    /**
     * Fetch records that have <code>post_code BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.vpp.psa.generated.tables.pojos.BatteryInfo> fetchRangeOfPostCode(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(BatteryInfo.BATTERY_INFO.POST_CODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>post_code IN (values)</code>
     */
    public List<com.vpp.psa.generated.tables.pojos.BatteryInfo> fetchByPostCode(Integer... values) {
        return fetch(BatteryInfo.BATTERY_INFO.POST_CODE, values);
    }

    /**
     * Fetch records that have <code>watt_capacity BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.vpp.psa.generated.tables.pojos.BatteryInfo> fetchRangeOfWattCapacity(Double lowerInclusive, Double upperInclusive) {
        return fetchRange(BatteryInfo.BATTERY_INFO.WATT_CAPACITY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>watt_capacity IN (values)</code>
     */
    public List<com.vpp.psa.generated.tables.pojos.BatteryInfo> fetchByWattCapacity(Double... values) {
        return fetch(BatteryInfo.BATTERY_INFO.WATT_CAPACITY, values);
    }
}
